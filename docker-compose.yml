version: '3.8'

services:
  # Application service
  app:
    build:
      context: .  # The Dockerfile is in the same directory as docker-compose.yml
      dockerfile: Dockerfile
    container_name: notification_app
    ports:
      - "4000:4000"  # Expose port 4000 for the app
    environment:
      - PORT=4000
      - MONGO_URI=mongodb://mongo:27017/${MONGO_INITDB_DATABASE:-NotificationSystemDesign_Dev}
      - KAFKABASEURL=kafka:9092
    depends_on:
      - mongo
      - kafka
      - redis

  # MongoDB service
  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE:-NotificationSystemDesign_Dev}

  # Zookeeper for Kafka
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    container_name: zookeeper
    ports:
      - "2181:2181"

  # Kafka service
  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  # Redis service
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"

  # Dozzle service for real-time log monitoring
  dozzle:
    image: amir20/dozzle:latest
    container_name: dozzle
    ports:
      - "9999:8080"  # Access Dozzle on localhost:9999
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro  # Required to access container logs
    depends_on:
      - app
      - mongo
      - kafka
      - redis
      - zookeeper
